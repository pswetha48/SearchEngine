import java.awt.Component;
import java.awt.FlowLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.UIManager;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

public class GUI extends JFrame {
	DefaultTableModel model;
	JTable table;
	String col[] = { "Doc#", "Content", "URL"};
	private JTextField txtTypeYourQuery;
	
	
	public static void main_gui() {
		new GUI().start();
	}

	public void start() {
		JPanel pane1 = new JPanel();
		JPanel pane2 = new JPanel();
		
		model = new DefaultTableModel(col, 2);
		table = new JTable() {
			@Override
			public boolean isCellEditable(int arg0, int arg1) {
				return false;
			}
		};
		
		table.setCellSelectionEnabled(true);
		JScrollPane pane = new JScrollPane(table);
		txtTypeYourQuery = new JTextField("", 50);
		txtTypeYourQuery.setBounds(10, 10, 200, 25);
		pane1.add(txtTypeYourQuery);
		
		JButton btnNewButton = new JButton("Search");
		btnNewButton.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent arg0) {
				//model.setRowCount(0);
				try
				{
				int rowCount = model.getRowCount();
				//Remove rows one by one from the end of the table
				for (int j = rowCount - 1; j >= 0; j--) {
				    model.removeRow(j);
				}
				
				table.setRowHeight(table.getRowHeight()+50);
				Main.buttonClicked(txtTypeYourQuery.getText());
				int i =1;
				for(Result r: Main.results){
					model.addRow(new Object[] { r.fileName,r.paragraph,r.url});
					i++;
				}
				
				}
				catch(Exception e)
				{
					e.printStackTrace();
				}
			}
		});
		btnNewButton.setBounds(220, 11, 89, 23);
		int lines = 2;
	    table.setRowHeight(table.getRowHeight() * lines);
	    table.setDefaultRenderer(String.class, new MultiLineCellRenderer());
		table.setModel(model);
		
		//table.getColumnModel().getColumn(0).setCellRenderer(new TableCellLongTextRenderer ());
		pane1.add(btnNewButton);
		
		pane2.add(pane);
		
		add(pane1);
		add(pane2);
		
		setVisible(true);
		setSize(1000, 1000);
		setLayout(new FlowLayout());
		setTitle("Spatial Retrieval System - Team 11");
		setDefaultCloseOperation(EXIT_ON_CLOSE);
	}
	public class LineWrapCellRenderer  extends JTextArea implements TableCellRenderer {

	    @Override
	    public Component getTableCellRendererComponent(
	            JTable table,
	            Object value,
	            boolean isSelected,
	            boolean hasFocus,
	            int row,
	            int column) {
	        this.setText((String)value);
	        this.setWrapStyleWord(true);            
	        this.setLineWrap(true);         
	        return this;
	    }

	}
}